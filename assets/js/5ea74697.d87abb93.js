"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[284],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),i=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=i(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return n?o.createElement(g,l(l({ref:t},c),{},{components:n})):o.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[u]="string"==typeof e?e:r,l[1]=d;for(var i=2;i<a;i++)l[i]=n[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2489:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>i});var o=n(7462),r=(n(7294),n(3905));const a={id:"8_4_Node_Cordining",title:"Node Cordoning"},l=void 0,d={unversionedId:"Kubernetes/kubernetes_storage_&_scheduling/8_4_Node_Cordining",id:"Kubernetes/kubernetes_storage_&_scheduling/8_4_Node_Cordining",title:"Node Cordoning",description:"* Marks a Node as unschedulable",source:"@site/docs/Kubernetes/3_kubernetes_storage_&_scheduling/8_4_Node_Cordining.md",sourceDirName:"Kubernetes/3_kubernetes_storage_&_scheduling",slug:"/Kubernetes/kubernetes_storage_&_scheduling/8_4_Node_Cordining",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/8_4_Node_Cordining",draft:!1,editUrl:"https://github.com/j-peguet/portfolio/blob/master/docs/Kubernetes/3_kubernetes_storage_&_scheduling/8_4_Node_Cordining.md",tags:[],version:"current",lastUpdatedAt:1676381131,formattedLastUpdatedAt:"Feb 14, 2023",frontMatter:{id:"8_4_Node_Cordining",title:"Node Cordoning"},sidebar:"docs",previous:{title:"Taints and Tolerations",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/8_3_Taints_&_Tolerations"},next:{title:"Manually Scheduling a Pod",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/8_5_Manually_Scheduling"}},s={},i=[{value:"Demo",id:"demo",level:2}],c={toc:i},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Marks a Node as unschedulable"),(0,r.kt)("li",{parentName:"ul"},"Prevents new Pods from being scheduled to that Node"),(0,r.kt)("li",{parentName:"ul"},"Does not affect any existing Pods on the Node"),(0,r.kt)("li",{parentName:"ul"},"This is useful as a preparatory step before a Node reboot or maintenance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"kubectl cordon c1-node2"))),(0,r.kt)("li",{parentName:"ul"},"If you want to gracefully evict your Pods from  Node..., before your maintenance, you'll drain the node to ensure that workload gets scheduled somewhere else in the cluster",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"kubectl drain c1-node2 --ignore-daemonsets")))),(0,r.kt)("h2",{id:"demo"},"Demo"),(0,r.kt)("p",null,"Node Cordoning"),(0,r.kt)("p",null,"Check the file deployment.yaml in the demo of ",(0,r.kt)("a",{parentName:"p",href:"/docs/Kubernetes/kubernetes_storage_&_scheduling/8_3_Taints_&_Tolerations"},"Taints and Tolerations\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#Let's create a deployment with three replicas\nkubectl apply -f deployment.yaml\n\n#Pods spread out evenly across the nodes\nkubectl get pods -o wide\n\n#Let's cordon c1-node2\nkubectl cordon c1-node2\n\n#That won't evict any pods...\nkubectl get pods -o wide\n\n#But if I scale the deployment\nkubectl scale deployment hello-world --replicas=6\n\n#c1-node2 won't get any new pods...one of the other Nodes will get an extra Pod here.\nkubectl get pods -o wide\n\n#Let's drain (remove) the Pods from c1-node2...\nkubectl drain c1-node2 \n\n#Let's try that again since daemonsets aren't scheduled we need to work around them.\nkubectl drain c1-node2 --ignore-daemonsets\n\n#Now all the workload is on c1-node1 and 2\nkubectl get pods -o wide\n\n#We can uncordon c1-node2, but nothing will get scheduled there until there's an event like a scaling operation or an eviction.\n#Something that will cause pods to get created\nkubectl uncordon c1-node2\n\n#So let's scale that Deployment and see where they get scheduled...\nkubectl scale deployment hello-world --replicas=9\n\n#All three get scheduled to the cordoned node\nkubectl get pods -o wide\n\n#Clean up this demo...\nkubectl delete deployment hello-world\n")))}p.isMDXComponent=!0}}]);