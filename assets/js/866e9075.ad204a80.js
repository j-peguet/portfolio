"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8145],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||s;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const s={id:"2_Define_PV_&_PVC",title:"Define PV & PVC"},i=void 0,o={unversionedId:"Kubernetes/kubernetes_storage_&_scheduling/2_Define_PV_&_PVC",id:"Kubernetes/kubernetes_storage_&_scheduling/2_Define_PV_&_PVC",title:"Define PV & PVC",description:"Defining a Persistent Volume",source:"@site/docs/Kubernetes/3_kubernetes_storage_&_scheduling/2_Define_PV_&_PVC.md",sourceDirName:"Kubernetes/3_kubernetes_storage_&_scheduling",slug:"/Kubernetes/kubernetes_storage_&_scheduling/2_Define_PV_&_PVC",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/2_Define_PV_&_PVC",draft:!1,editUrl:"https://github.com/j-peguet/portfolio/blob/master/docs/Kubernetes/3_kubernetes_storage_&_scheduling/2_Define_PV_&_PVC.md",tags:[],version:"current",lastUpdatedAt:1676381131,formattedLastUpdatedAt:"Feb 14, 2023",sidebarPosition:2,frontMatter:{id:"2_Define_PV_&_PVC",title:"Define PV & PVC"},sidebar:"docs",previous:{title:"Persistent storage",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/1_Persistent_storage"},next:{title:"Configure Storage Server",permalink:"/docs/Kubernetes/kubernetes_storage_&_scheduling/3_Configure_server_storage"}},l={},u=[{value:"Defining a Persistent Volume",id:"defining-a-persistent-volume",level:2},{value:"Defining a Persistent Volume Claim",id:"defining-a-persistent-volume-claim",level:2},{value:"Using Persistent Volume in Pods",id:"using-persistent-volume-in-pods",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"defining-a-persistent-volume"},"Defining a Persistent Volume"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"type - {nfs, fc, azureDisk, ...}"),(0,a.kt)("li",{parentName:"ul"},"capacity"),(0,a.kt)("li",{parentName:"ul"},"accessModes"),(0,a.kt)("li",{parentName:"ul"},"persistentVolumeReclaimPolicy - this parameter is Optional"),(0,a.kt)("li",{parentName:"ul"},"Labels")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: PersistentVolume\nmetadata:\n    name: pv-nfs-data\nspec:\n    capacity:\n        storage: 10Gi\n    accessModes:\n        - ReadWriteMany\n    nfs:\n        server: 172.16.94.5\n        path: "/export/volumes/pod"\n')),(0,a.kt)("h2",{id:"defining-a-persistent-volume-claim"},"Defining a Persistent Volume Claim"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"accessModes"),(0,a.kt)("li",{parentName:"ul"},"resources"),(0,a.kt)("li",{parentName:"ul"},"storageClassName"),(0,a.kt)("li",{parentName:"ul"},"selector")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: pvc-nfs-data\nspec:\n    accessModes:\n        -ReadWriteMany\n    resources:\n        requests:\n            storage: 10Gi\n")),(0,a.kt)("h2",{id:"using-persistent-volume-in-pods"},"Using Persistent Volume in Pods"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'...\nspec:\n    volumes:\n    - name: webcontent\n      persistentVolumeClaim:\n        claimName: pvc-nfs-data\n    containers:\n    - name: nginx\n    ...\n    volumeMounts:\n    - name: webcontent\n      mountPath: "/usr/share/nginx/html/web-app"\n')))}m.isMDXComponent=!0}}]);