"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4293],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(n),b=r,g=p["".concat(i,".").concat(b)]||p[b]||c[b]||s;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<s;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4652:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),o=["components"],l={id:"configure-master-slave",title:"Configure a Master Slave Replication"},i=void 0,d={unversionedId:"PostgreSQL/configure-master-slave",id:"PostgreSQL/configure-master-slave",isDocsHomePage:!1,title:"Configure a Master Slave Replication",description:"Deux serveurs PostgreSQL sont n\xe9cessaire, un \xe9tant le Master, l'autre le Slave.",source:"@site/docs/PostgreSQL/configure-master-slave.md",sourceDirName:"PostgreSQL",slug:"/PostgreSQL/configure-master-slave",permalink:"/docs/PostgreSQL/configure-master-slave",editUrl:"https://github.com/j-peguet/portfolio/blob/master/docs/PostgreSQL/configure-master-slave.md",tags:[],version:"current",lastUpdatedAt:1630868816,formattedLastUpdatedAt:"9/5/2021",frontMatter:{id:"configure-master-slave",title:"Configure a Master Slave Replication"},sidebar:"docs",previous:{title:"Install PostgreSQL",permalink:"/docs/PostgreSQL/install-postgresql"},next:{title:"Mastering Arrays",permalink:"/docs/Javascript/mastering-arrays"}},u=[{value:"If sudo is not install",id:"if-sudo-is-not-install",children:[],level:3},{value:"Change pg_hba.conf file",id:"change-pg_hbaconf-file",children:[],level:3},{value:"Create test database",id:"create-test-database",children:[],level:2},{value:"Install Bucardo Requirements",id:"install-bucardo-requirements",children:[],level:2},{value:"Download and Install Bucardo",id:"download-and-install-bucardo",children:[],level:2},{value:"Bucardo Configuration",id:"bucardo-configuration",children:[{value:"Initialisation",id:"initialisation",children:[],level:3},{value:"S\xe9lection des bases",id:"s\xe9lection-des-bases",children:[],level:3},{value:"S\xe9lection des tables",id:"s\xe9lection-des-tables",children:[],level:3},{value:"Cr\xe9ation d&#39;une herdTable",id:"cr\xe9ation-dune-herdtable",children:[],level:3},{value:"Cr\xe9ation d&#39;une synchronisation",id:"cr\xe9ation-dune-synchronisation",children:[],level:3},{value:"Lancement de la synchronisation",id:"lancement-de-la-synchronisation",children:[],level:3}],level:2}],c={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Deux serveurs PostgreSQL sont n\xe9cessaire, un \xe9tant le Master, l'autre le Slave."),(0,s.kt)("p",null,"La base de donn\xe9es ",(0,s.kt)("code",null,"test")," sera r\xe9pliqu\xe9e. "),(0,s.kt)("p",null,"Les \xe9critures devront se faire ",(0,s.kt)("strong",{parentName:"p"},"uniquement")," sur la base de donn\xe9es Master."),(0,s.kt)("h3",{id:"if-sudo-is-not-install"},"If sudo is not install"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"su\napt-get update\napt install sudo -y \n")),(0,s.kt)("h3",{id:"change-pg_hbaconf-file"},"Change pg_hba.conf file"),(0,s.kt)("p",null,"Modifier le fichier ",(0,s.kt)("code",null,"/etc/postgresql/<your_version>/main/pg_hba.conf")),(0,s.kt)("p",null,"Et ajouter les lignes ci-dessous."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Change this lines\nlocal   bucardo         bucardo                                 trust\nlocal   all             postgres                                trust\n# And add this lines\nhost    all             postgres        all                     trust\nhost    bucardo         bucardo         all                     trust\n\n# Reload PostgreSQL Service\nsudo service postgresql restart\n")),(0,s.kt)("h2",{id:"create-test-database"},"Create test database"),(0,s.kt)("p",null,"Cette base de donn\xe9es sera r\xe9pliqu\xe9 sur le deuxi\xe8me serveur PostgreSQL."),(0,s.kt)("p",null,"Jouer le script de cr\xe9ation de base et de la table sur les deux serveurs PostgreSQL afin que leurs schema soient indentiques."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE DATABASE test\n    WITH \n    OWNER = postgres\n    TEMPLATE = template0\n    ENCODING = \'UTF8\'\n    CONNECTION LIMIT = -1;\n\nCREATE EXTENSION IF NOT EXISTS "uuid-ossp";\n\nCREATE TABLE "user" (\n  "uid" uuid PRIMARY KEY DEFAULT (uuid_generate_v4()),\n  "email" varchar UNIQUE NOT NULL,\n  "password" varchar NOT NULL,\n  "username" varchar NOT NULL\n);\n\n-- Uniquement sur la base de donn\xe9es Master\nINSERT INTO public."user"(email, password, username)\n    VALUES (\'test@example.com\', \'StrongP@ssword\', \'John\');\n')),(0,s.kt)("h2",{id:"install-bucardo-requirements"},"Install Bucardo Requirements"),(0,s.kt)("p",null,"L'outil choisi pour cette r\xe9plication est ",(0,s.kt)("a",{parentName:"p",href:"https://bucardo.org/Bucardo/installation/"},"Bucardo"),".\nL'utilitaire doit \xeatre install\xe9 ",(0,s.kt)("strong",{parentName:"p"},"uniquement")," sur le serveur ",(0,s.kt)("strong",{parentName:"p"},"Master"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install libdbix-safe-perl -y\nsudo apt-get install libdbd-pg-perl -y\nsudo apt-get install postgresql-plperl-13 -y\n\n# For use 'make' command\nsudo apt-get install build-essential -y\n")),(0,s.kt)("h2",{id:"download-and-install-bucardo"},"Download and Install Bucardo"),(0,s.kt)("p",null,"T\xe9l\xe9chargement de l'outil"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir bucardo\ncd bucardo\n# Download Bucardo\nwget https://bucardo.org/downloads/Bucardo-5.6.0.tar.gz\n# And it's signature\nwget https://bucardo.org/downloads/Bucardo-5.6.0.tar.gz.asc\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Unzip the tar file\ntar xvfz Bucardo-5.6.0.tar.gz\ncd Bucardo-5.6.0/\nperl Makefile.PL\nsudo make install\n# The bucardo command os now available\nbucardo\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# If you have an error with perl "perl: warning: Setting locale failed"\n# Uncomment the file "fr_FR.UTF-8 UTF-8"\nsudo nano /etc/locale.gen \nsudo locale-gen\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /var/run/bucardo\nsudo mkdir -p /var/log/bucardo\n")),(0,s.kt)("p",null,"Cr\xe9ation de la base de donn\xe9es et du role permettant de stocker les configurations de bucardo."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"-- Create the user dans database \"bucardo\"\nCREATE ROLE bucardo WITH\n    LOGIN\n    SUPERUSER\n    CREATEDB\n    CREATEROLE\n    INHERIT\n    NOREPLICATION\n    CONNECTION LIMIT -1\n    PASSWORD 'bucardo';\n    \nCREATE DATABASE bucardo\n    WITH \n    OWNER = bucardo\n    TEMPLATE = template0\n    ENCODING = 'UTF8'\n    CONNECTION LIMIT = -1;\n")),(0,s.kt)("h2",{id:"bucardo-configuration"},"Bucardo Configuration"),(0,s.kt)("h3",{id:"initialisation"},"Initialisation"),(0,s.kt)("p",null,"Initialisation de la base de donn\xe9es bucardo."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bucardo install\n> Current connection settings:\n>    1. Host:           Localhost\n>    2. Port:           5432\n>    3. User:           bucardo\n>    4. Database:       bucardo\n>    5. PID directory:  /var/run/bucardo\n>    Enter a number to change it, P to proceed, or Q to quit: P\n>\n>    Attempting to create and populate the bucardo database and schema\n>    Database creation is complete\n\n# If you want to change one of these setting, tap the number and set the new value\n# If you don't have create a username, change it\n# Idem from database\n")),(0,s.kt)("h3",{id:"s\xe9lection-des-bases"},"S\xe9lection des bases"),(0,s.kt)("p",null,"S\xe9lection de la base de donn\xe9es source de la r\xe9plication (<...>_host)."),(0,s.kt)("p",null,"Changer les variables dbname, port, host, user et password en fonction de vos configurations.\nList des varibles disponibles ",(0,s.kt)("a",{parentName:"p",href:"https://bucardo.org/Bucardo/cli/add_database"},"ici"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bucardo add db test_host dbname=test port=5432 host=localhost user=bucardo password=bucardo\n")),(0,s.kt)("p",null,"S\xe9lection de la base de donn\xe9es cible de la r\xe9plication (<...>_dest)."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bucardo add db test_dest dbname=test port=5432 host=192.168.4.131 user=postgres password=postgres\n")),(0,s.kt)("h3",{id:"s\xe9lection-des-tables"},"S\xe9lection des tables"),(0,s.kt)("p",null,"Dans note exemple toutes les tables seront r\xe9pliqu\xe9es"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Add tables\nbucardo add tables all db=test_host\n> New tables added: 1\n")),(0,s.kt)("h3",{id:"cr\xe9ation-dune-herdtable"},"Cr\xe9ation d'une herdTable"),(0,s.kt)("p",null,"La herdTable permet de regrouper les tables qui doivent \xeatre synchronis\xe9es."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'bucardo add herd test_copying_herd all\n> Created relgroup "test_copying_herd"\n> The following tables or sequences are now part of the relgroup "test_copying_herd":\n>  public.user\n')),(0,s.kt)("h3",{id:"cr\xe9ation-dune-synchronisation"},"Cr\xe9ation d'une synchronisation"),(0,s.kt)("p",null,"La synchronisation permet de d\xe9finir, la tables source, la table cible et la herdTable qui doivent \xeatre li\xe9es."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'bucardo add sync sync_test relgroup=test_copying_herd dbs=test_host:source,test_dest:target onetimecopy=2\n> Added sync "sync_test"\n> Created a new dbgroup named "sync_test"\n')),(0,s.kt)("h3",{id:"lancement-de-la-synchronisation"},"Lancement de la synchronisation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo bucardo start\n> Checking for existing processes\n> Starting Bucardo\n\nsudo bucardo status\n> PID of Bucardo MCP: 6793\n> Name        State    Last good    Time    Last I/D    Last bad    Time  \n> ===========+========+============+=======+===========+===========+=======\n> sync_test | Good   | 14:13:44   | 18s   | 0/0       | none      |       \n")),(0,s.kt)("p",null,"Et voil\xe0 !"),(0,s.kt)("p",null,"Maintenant sur votre 2\xe8me BDD vous pouvez constater que les donn\xe9es ont \xe9t\xe9 r\xe9pliqu\xe9es. "),(0,s.kt)("p",null,"Un autre tuto m'ayant aid\xe9 \xe0 r\xe9aliser celui ci.\nPour plus d'information: ",(0,s.kt)("a",{parentName:"p",href:"https://installvirtual.com/how-to-install-bucardo-for-postgres-replication/"},"https://installvirtual.com/how-to-install-bucardo-for-postgres-replication/")))}p.isMDXComponent=!0}}]);